Index: classEnemy.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\n\r\nfrom libraryImages import load_image\r\nfrom classBullet import Arrow, Branch\r\n\r\n\r\nclass StandartEnemy(pygame.sprite.Sprite):\r\n    image = load_image(\"player41.png\")\r\n\r\n    def __init__(self, x, y, group, size, im=None):\r\n        super().__init__(group)\r\n        self.radius = radius = 0.07 * size[1]\r\n        if im is None:\r\n            self.image = pygame.transform.scale(StandartEnemy.image, (radius, 2.1 * radius))\r\n        else:\r\n            self.image = pygame.transform.scale(im[0], im[1])\r\n        self.rect = self.image.get_rect().move(x, y)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.vx = 2\r\n        self.vy = 5\r\n        self.v = 5\r\n        self.time = 0\r\n        self.Ttime = 200\r\n        self.size = size\r\n\r\n    def update(self, floor, objects, motion, player, bullets):\r\n        if motion == \"r\":\r\n            self.rect = self.rect.move(player.v, 0)\r\n        elif motion == \"l\":\r\n            self.rect = self.rect.move(-player.v, 0)\r\n        self.rect.y += self.vy\r\n        if pygame.sprite.spritecollideany(self, objects):\r\n            if ((self.rect.x - player.rect.x) ** 2 + (self.rect.y - player.rect.y) ** 2) ** 0.5 <= 0.3 * self.size[0]:\r\n                if self.Ttime >= 200:\r\n                    self.Ttime = 0\r\n                    if player.rect.x > self.rect.x:\r\n                        Arrow(self.rect.x, self.rect.y, *self.size, bullets, 15)\r\n                    else:\r\n                        Arrow(self.rect.x, self.rect.y, *self.size, bullets, -15)\r\n                else:\r\n                    self.Ttime += 1\r\n                self.vy = 0\r\n            else:\r\n                self.Ttime = 200\r\n                self.vy = 0\r\n                self.rect.x += self.vx\r\n        else:\r\n            if ((self.rect.x - player.rect.x) ** 2 + (self.rect.y - player.rect.y) ** 2) ** 0.5 <= 0.3 * self.size[0]:\r\n                if self.Ttime >= 200:\r\n                    self.Ttime = 0\r\n                    if player.rect.x > self.rect.x:\r\n                        Arrow(self.rect.x, self.rect.y, *self.size, bullets, 15)\r\n                    else:\r\n                        Arrow(self.rect.x, self.rect.y, *self.size, bullets, -15)\r\n                else:\r\n                    self.Ttime += 1\r\n            else:\r\n                self.Ttime = 200\r\n                if self.time >= 100:\r\n                    self.vx = -self.vx\r\n                    self.rect.x += self.vx\r\n                    self.time = 0\r\n                else:\r\n                    self.time += 1\r\n\r\n\r\nclass NoBulletEnemy(StandartEnemy):\r\n    image = load_image(\"enemy_slime.png\")\r\n\r\n    def __init__(self, x, y, group, size):\r\n        self.frames = []\r\n        self.frame_tick = 20\r\n        self.cut_sheet(NoBulletEnemy.image, 8, 3)\r\n        self.cur_frame = 16\r\n        self.stop = False\r\n        super().__init__(x, y, group, size, (self.frames[self.cur_frame], (0.055 * size[0], 0.06 * size[1])))\r\n\r\n    def cut_sheet(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(0, 0, sheet.get_width() // columns,\r\n                                sheet.get_height() // rows)\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames.append(sheet.subsurface(pygame.Rect(\r\n                    frame_location, self.rect.size)))\r\n\r\n    def update(self, floor, objects, motion, player, bullets):\r\n        if motion == \"r\":\r\n            self.rect = self.rect.move(player.v, 0)\r\n        elif motion == \"l\":\r\n            self.rect = self.rect.move(-player.v, 0)\r\n        self.rect.y += self.vy\r\n        if self.stop:\r\n            self.cur_frame = 16\r\n        elif self.vx <= 0:\r\n            self.cur_frame = 0\r\n        elif self.vx >= 0:\r\n            self.cur_frame = 8\r\n        self.image = self.frames[self.cur_frame]\r\n        if pygame.sprite.spritecollideany(self, objects):\r\n            self.vy = 0\r\n            self.rect.x += self.vx\r\n            self.stop = False\r\n        else:\r\n            if self.time >= 200:\r\n                self.vx = -self.vx\r\n                self.rect.x += self.vx\r\n                self.time = 0\r\n                self.stop = False\r\n            else:\r\n                self.time += 1\r\n                self.stop = True\r\n\r\n\r\nclass NoMovementEnemy(StandartEnemy):\r\n    image = load_image(\"enemy_ent.png\")\r\n\r\n    def __init__(self, x, y, group, size):\r\n        self.frames = []\r\n        self.frame_tick = 20\r\n        self.cut_sheet(NoMovementEnemy.image, 8, 3)\r\n        self.cur_frame = 16\r\n        self.stop = False\r\n        super().__init__(x, y, group, size, (NoMovementEnemy.image, (0.075 * size[0], 0.15 * size[1])))\r\n\r\n    def cut_sheet(self, sheet, columns, rows):\r\n        self.rect = pygame.Rect(0, 0, sheet.get_width() // columns,\r\n                                sheet.get_height() // rows)\r\n        for j in range(rows):\r\n            for i in range(columns):\r\n                frame_location = (self.rect.w * i, self.rect.h * j)\r\n                self.frames.append(sheet.subsurface(pygame.Rect(\r\n                    frame_location, self.rect.size)))\r\n\r\n    def update(self, floor, objects, motion, player, bullets):\r\n        if motion == \"r\":\r\n            self.rect = self.rect.move(player.v, 0)\r\n        elif motion == \"l\":\r\n            self.rect = self.rect.move(-player.v, 0)\r\n        self.rect.y += self.vy\r\n        if pygame.sprite.spritecollideany(self, floor):\r\n            if ((self.rect.x - player.x) ** 2 + (self.rect.y - player.y) ** 2) ** 0.5 <= 0.4 * self.size[0]:\r\n                if self.Ttime >= 200:\r\n                    self.Ttime = 0\r\n                    Branch(self.rect.x, self.rect.y, *self.size, bullets, (player.rect.x, player.rect.y))\r\n                else:\r\n                    self.Ttime += 1\r\n                self.vy = 0\r\n            else:\r\n                self.Ttime = 200\r\n                self.vy = 0\r\n        # else:\r\n        #     if ((self.rect.x - player.x) ** 2 + (self.rect.y - player.y) ** 2) ** 0.5 <= 0.2 * self.size[0]:\r\n        #         if self.Ttime >= 200:\r\n        #             self.Ttime = 0\r\n        #             Branch(self.rect.x, self.rect.y, *self.size, bullets, (player.rect.x, player.rect.y))\r\n        #         else:\r\n        #             self.Ttime += 1\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/classEnemy.py b/classEnemy.py
--- a/classEnemy.py	(revision 1005df74ac0da3a4697e42bc8ba98993e1a69637)
+++ b/classEnemy.py	(date 1705696812798)
@@ -5,13 +5,13 @@
 
 
 class StandartEnemy(pygame.sprite.Sprite):
-    image = load_image("player41.png")
+
 
     def __init__(self, x, y, group, size, im=None):
         super().__init__(group)
         self.radius = radius = 0.07 * size[1]
         if im is None:
-            self.image = pygame.transform.scale(StandartEnemy.image, (radius, 2.1 * radius))
+            self.image = pygame.transform.scale(load_image("player41.png"), (0.1 * size[1], 0.1 * size[1]))
         else:
             self.image = pygame.transform.scale(im[0], im[1])
         self.rect = self.image.get_rect().move(x, y)
@@ -113,9 +113,10 @@
 
 
 class NoMovementEnemy(StandartEnemy):
-    image = load_image("enemy_ent.png")
-
     def __init__(self, x, y, group, size):
+        self.image1 = pygame.transform.scale(load_image("enemy_tree_idle.png"), (0.1 * size[1], 0.1 * size[1]))
+        self.image2 = pygame.transform.scale(load_image("enemy_tree_attack.png"), (0.1 * size[1], 0.1 * size[1]))
+        self.image3 = pygame.transform.scale(load_image("player41.png"), (0.1 * size[1], 0.1 * size[1]))
         self.frames = []
         self.frame_tick = 20
         self.cut_sheet(NoMovementEnemy.image, 8, 3)
